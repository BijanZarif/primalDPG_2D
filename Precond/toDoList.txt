- Remove 2x startup cost for primal DPG by locally interping to higher order only?
- Speed up local solve by using parpool/parfor, avoid kron

Preconditioners to try
1. ideal block preconditioner (invert blocks exactly)
2. (O)AS + coarse P1 (interp to N=1 space) classical OAS:  high-order elements, matrix blocks with overlap, coarse space preconditioner.
3. GMG + P1 AGMG
4. nodal dpg-fem preconditioner - take all nodes from all elements (ignoring redundancy), triangulate (delauney), and then form an operator the same size as the original system but with increased sparsity.

cleaning up: code consolidation
- generating stiffness matrices

results for primal DPG (poisson)
- block Jacobi/triangular factorization ~ both work because of Dahmen's iteration
- block triangular factorization = best when using exact A solve
- block Jacobi = cheapest when using both inexact A, C solves
- fixed point block Jacobi iteration = speeds up GMRES but doesn't save # of global solves
- fGMRES/fPCG indistinguishable
- andrew barker/brenner paper on DPG + OAS beats us by 1/2 of the iterations, though both are h/N indep

to try/think
- substructuring of solution
